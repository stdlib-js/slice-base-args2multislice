{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable max-len */\n\n'use strict';\n\n// MODULES //\n\nvar MultiSlice = require( '@stdlib/slice-multi' );\n\n\n// MAIN //\n\n/**\n* Creates a MultiSlice object from a list of MultiSlice constructor arguments.\n*\n* @param {(Slice|integer|null|void)} args - constructor arguments\n* @returns {MultiSlice} MultiSlice object\n*\n* @example\n* var Slice = require( '@stdlib/slice-ctor' );\n*\n* var s = args2multislice( [ void 0, new Slice( 0, 10, 1 ) ] );\n* // returns <MultiSlice>\n*\n* var data = s.data;\n* // returns [ null, <Slice> ]\n*\n* @example\n* var Slice = require( '@stdlib/slice-ctor' );\n*\n* var s = args2multislice( [ new Slice( 0, 10, 1 ), void 0 ] );\n* // returns <MultiSlice>\n*\n* var data = s.data;\n* // returns [ <Slice>, null ]\n*\n* @example\n* var Slice = require( '@stdlib/slice-ctor' );\n*\n* var s = args2multislice( [ new Slice( 0, 10, 1 ), void 0, void 0, new Slice( 0, 10, 1 ) ] );\n* // returns <MultiSlice>\n*\n* var data = s.data;\n* // returns [ <Slice>, null, null, <Slice> ]\n*\n* @example\n* var Slice = require( '@stdlib/slice-ctor' );\n*\n* var s = args2multislice( [ void 0, new Slice( 0, 10, 1 ), null,  void 0, new Slice( 2, 9, 2 ), null, void 0 ] );\n* // returns <MultiSlice>\n*\n* var data = s.data;\n* // returns [ null, <Slice>, null, null, <Slice>, null, null ]\n*/\nfunction args2multislice( args ) {\n\tswitch ( args.length ) {\n\tcase 0:\n\t\treturn new MultiSlice();\n\tcase 1:\n\t\treturn new MultiSlice( args[ 0 ] );\n\tcase 2:\n\t\treturn new MultiSlice( args[ 0 ], args[ 1 ] );\n\tcase 3:\n\t\treturn new MultiSlice( args[ 0 ], args[ 1 ], args[ 2 ] );\n\tcase 4:\n\t\treturn new MultiSlice( args[ 0 ], args[ 1 ], args[ 2 ], args[ 3 ] );\n\tcase 5:\n\t\treturn new MultiSlice( args[ 0 ], args[ 1 ], args[ 2 ], args[ 3 ], args[ 4 ] );\n\tcase 6:\n\t\treturn new MultiSlice( args[ 0 ], args[ 1 ], args[ 2 ], args[ 3 ], args[ 4 ], args[ 5 ] );\n\tcase 7:\n\t\treturn new MultiSlice( args[ 0 ], args[ 1 ], args[ 2 ], args[ 3 ], args[ 4 ], args[ 5 ], args[ 6 ] );\n\tcase 8:\n\t\treturn new MultiSlice( args[ 0 ], args[ 1 ], args[ 2 ], args[ 3 ], args[ 4 ], args[ 5 ], args[ 6 ], args[ 7 ] );\n\tcase 9:\n\t\treturn new MultiSlice( args[ 0 ], args[ 1 ], args[ 2 ], args[ 3 ], args[ 4 ], args[ 5 ], args[ 6 ], args[ 7 ], args[ 8 ] );\n\tcase 10:\n\t\treturn new MultiSlice( args[ 0 ], args[ 1 ], args[ 2 ], args[ 3 ], args[ 4 ], args[ 5 ], args[ 6 ], args[ 7 ], args[ 8 ], args[ 9 ] );\n\tdefault:\n\t\treturn MultiSlice.apply( null, args );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = args2multislice;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create a MultiSlice object from a list of MultiSlice constructor arguments.\n*\n* @module @stdlib/slice-base-args2multislice\n*\n* @example\n* var Slice = require( '@stdlib/slice-ctor' );\n* var args2multislice = require( '@stdlib/slice-base-args2multislice' );\n*\n* var s = args2multislice( [ void 0, new Slice( 0, 10, 1 ) ] );\n* // returns <MultiSlice>\n*\n* var data = s.data;\n* // returns [ null, <Slice> ]\n*\n* @example\n* var Slice = require( '@stdlib/slice-ctor' );\n* var args2multislice = require( '@stdlib/slice-base-args2multislice' );\n*\n* var s = args2multislice( [ new Slice( 0, 10, 1 ), void 0 ] );\n* // returns <MultiSlice>\n*\n* var data = s.data;\n* // returns [ <Slice>, null ]\n*\n* @example\n* var Slice = require( '@stdlib/slice-ctor' );\n* var args2multislice = require( '@stdlib/slice-base-args2multislice' );\n*\n* var s = args2multislice( [ new Slice( 0, 10, 1 ), void 0, void 0, new Slice( 0, 10, 1 ) ] );\n* // returns <MultiSlice>\n*\n* var data = s.data;\n* // returns [ <Slice>, null, null, <Slice> ]\n*\n* @example\n* var Slice = require( '@stdlib/slice-ctor' );\n* var args2multislice = require( '@stdlib/slice-base-args2multislice' );\n*\n* var s = args2multislice( [ void 0, new Slice( 0, 10, 1 ), null,  void 0, new Slice( 2, 9, 2 ), null, void 0 ] );\n* // returns <MultiSlice>\n*\n* var data = s.data;\n* // returns [ null, <Slice>, null, null, <Slice>, null, null ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAwBA,IAAIC,EAAa,QAAS,qBAAsB,EA+ChD,SAASC,EAAiBC,EAAO,CAChC,OAASA,EAAK,OAAS,CACvB,IAAK,GACJ,OAAO,IAAIF,EACZ,IAAK,GACJ,OAAO,IAAIA,EAAYE,EAAM,CAAE,CAAE,EAClC,IAAK,GACJ,OAAO,IAAIF,EAAYE,EAAM,CAAE,EAAGA,EAAM,CAAE,CAAE,EAC7C,IAAK,GACJ,OAAO,IAAIF,EAAYE,EAAM,CAAE,EAAGA,EAAM,CAAE,EAAGA,EAAM,CAAE,CAAE,EACxD,IAAK,GACJ,OAAO,IAAIF,EAAYE,EAAM,CAAE,EAAGA,EAAM,CAAE,EAAGA,EAAM,CAAE,EAAGA,EAAM,CAAE,CAAE,EACnE,IAAK,GACJ,OAAO,IAAIF,EAAYE,EAAM,CAAE,EAAGA,EAAM,CAAE,EAAGA,EAAM,CAAE,EAAGA,EAAM,CAAE,EAAGA,EAAM,CAAE,CAAE,EAC9E,IAAK,GACJ,OAAO,IAAIF,EAAYE,EAAM,CAAE,EAAGA,EAAM,CAAE,EAAGA,EAAM,CAAE,EAAGA,EAAM,CAAE,EAAGA,EAAM,CAAE,EAAGA,EAAM,CAAE,CAAE,EACzF,IAAK,GACJ,OAAO,IAAIF,EAAYE,EAAM,CAAE,EAAGA,EAAM,CAAE,EAAGA,EAAM,CAAE,EAAGA,EAAM,CAAE,EAAGA,EAAM,CAAE,EAAGA,EAAM,CAAE,EAAGA,EAAM,CAAE,CAAE,EACpG,IAAK,GACJ,OAAO,IAAIF,EAAYE,EAAM,CAAE,EAAGA,EAAM,CAAE,EAAGA,EAAM,CAAE,EAAGA,EAAM,CAAE,EAAGA,EAAM,CAAE,EAAGA,EAAM,CAAE,EAAGA,EAAM,CAAE,EAAGA,EAAM,CAAE,CAAE,EAC/G,IAAK,GACJ,OAAO,IAAIF,EAAYE,EAAM,CAAE,EAAGA,EAAM,CAAE,EAAGA,EAAM,CAAE,EAAGA,EAAM,CAAE,EAAGA,EAAM,CAAE,EAAGA,EAAM,CAAE,EAAGA,EAAM,CAAE,EAAGA,EAAM,CAAE,EAAGA,EAAM,CAAE,CAAE,EAC1H,IAAK,IACJ,OAAO,IAAIF,EAAYE,EAAM,CAAE,EAAGA,EAAM,CAAE,EAAGA,EAAM,CAAE,EAAGA,EAAM,CAAE,EAAGA,EAAM,CAAE,EAAGA,EAAM,CAAE,EAAGA,EAAM,CAAE,EAAGA,EAAM,CAAE,EAAGA,EAAM,CAAE,EAAGA,EAAM,CAAE,CAAE,EACrI,QACC,OAAOF,EAAW,MAAO,KAAME,CAAK,CACrC,CACD,CAKAH,EAAO,QAAUE,ICnCjB,IAAIE,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "MultiSlice", "args2multislice", "args", "main"]
}
